git init
git add File.txt
git commit File.txt

git status (shows status in green if add in repo, but not commited yet. Slows in Red if changed made in local and not added to repo yet)
git diff (shows changes if file chages in local but not added to git yet)
git log --graph --decorate --oneline
git restore (revert back change in local if not added / commited to git yet)

git tag -a v1.4 -m "my version 1.4"  (Created a tag)
git tag (List the tags)

To restore old code 
---------------------------------------
git log --oneline  // give commit id>>
git checkout <<commit_id >>  // Changes the local file content to represent the files status as in commit_id
git checkout master // makes the local file same as the head

undo commmit
------------------------------------------
git log --oneline  // give commit id>>
git reset --hard <<commit_id>>
This will set the head at the assigned commit_id, all the code checked in after that commit_id is lost from git and local

Collaboration with other // remote git
-----------------------------------------------
 git remote add origin https://github.com/surajit2k2/mergetest.git   // Create a new connection to a remote repository, the name by default is origin
 git push -u origin master  // Push code to remote repository and create a master branch in remote from local repo master branch 

 git branch // give branches in local repo, like master
 git branch -r // gives branches in remote repo, like origin/master ==> here origin denotes remote repo name and origin/master ==> master branch in origin repo

 git fetch origin master // from remote repo and branch master to local repo
 git merge origin/branch
 
 git pull origin  // This command fetch from remote and merge to local repository .
 
=======
 Now if we directly commit to remote Master , by updating the file in github, then remote is ahead of local repo
If we try to do  $git push -u origin master it will give error as remote is ahead of local
In this case we need to go a $git pull origin 
Case 1: If the same file is also changed in local repo, then a merge conflict is created and the local file shows the merge and the conflict.
Manaully the merge has to be done in the local file then do
git add File.txt
git commit -m "Update"
git push - u origin master // This will make both the local and remote repo in sync
Case 2: If the same file is also changed in local working directory but not yet commited to the local repo.
If we do a $ $git pull origin  or $ git git fetch origin and git merge togther, then both will fail and conflict will also not appear
So we either need to commit the changes in local repo or discard the changes by $ git restore . 
Then we can go a $git pull origin

Using Branches
-------------------------------------------
git branch  // List all the branches in local repo
git branch -a // List all the remote branches in local repo
git branch release1.0 // Create a new branch from master branch
git push -u origin release1.0 // Create a new branch in remote repo

git branch -D release1.0 // delete a new branch from master branch
git push -u origin --delete release1.0 // delete the branch in remote repo

We can go to another branch by
git checkout release1.0 //shows the code from release1.0 branch local repository
git checkout master // shows the code from the master branch in local repo 

Merge files from one branch to another
--------------------------------------------
git branch // List all the branches in local repo
git diff release1.0 // to know the diference between the master branch and release branch
git checkout master //Working directory set with master branch
git merge release1.0 // merge all the files from release1.0 branch into master branch
git add . // To add new files im Master branch from Release branch
git commit -m "Commited in Master"

git pull origin master // To pull the files from the remote repo and merge in the local repo 
If merge conflict arise the resolve the files manually the again go a $git commit
git push -u remote master
git checkout release1.0
git push -u remote release1.0

Merge selective files from one branch to another
--------------------------------------------
git branch // List all the branches in local repo
git checkout master //Working directory set with master branch
git checkout release1.0 -- file1 file2 etc // Only merge the files from release1.0 branch to master
						However this will override the working directory copy of master and there will be no notification given even if the files		
						are updated in master branch. There is no merge conflict
git add .
git commit -m "Committed in Master"
git push -u remote master



